#!/usr/bin/env bash
set -e

# Make sure the Zulip dev virtualenv exists, and operate within it.
if [ ! -d /srv/zulip-py3-venv ]; then
    ./tools/setup/setup_venvs.py
fi
source /srv/zulip-py3-venv/bin/activate

compile_requirements () {
    source="$1"
    output="$2"

    pip-compile --output-file "$output" "$source"

    # Remove the editable flag.  It's there because pip-compile can't
    # yet do without it (see
    # https://github.com/jazzband/pip-tools/issues/272 upstream), but
    # in the output of pip-compile it's no longer needed.
    sed -i 's/-e //' "$output"

    # pip-tools bug; future, futures are obsolete in python3
    sed -i '/futures==/d' "$output"
    sed -i '/future==/d' "$output"

    (
        cat <<EOF
#
# This file is GENERATED.  Don't edit directly.
#
# To update, edit the non-"lock" files in requirements/*.txt, then:
#
#    tools/update-locked-requirements
#
# For details, see requirements/README.md .
#
EOF
        # This perl invocation strips the existing block of header comments.
        perl -0pe 's/\A(^#.*\n)*//m' "$output"
    ) | sponge "$output"
}

compile_requirements requirements/prod.txt requirements/prod_lock.txt
compile_requirements requirements/dev.txt requirements/dev_lock.txt
